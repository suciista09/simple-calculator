def job_test = "ISQA/integration_test"
def testResult
pipeline {
    agent{
        node {
            label "docker-chrome"
        }
    }

    environment{
        ATLAS_SONAR_ENV = credentials('ATLAS_SONAR_ENV')
    }

    stages{

        stage('Sonar Check'){
            steps{
                sh './gradlew clean sonarqube'
            }
        }

        stage('Unit test'){
            steps{
                sh './gradlew clean test'
            }

            post{
                always{
                    jacoco(
                        execPattern: 'build/jacoco/*.exec',
                        classPattern: 'build/classes',
                        sourcePattern: 'src/java,src/*/java,src/*/src',
                        exclusionPattern: '**/*Test'
                    )
                }
            }
        }

        stage('Build'){
            steps{
                sh './gradlew clean build'
            }
        }

        stage('Deploy'){
            steps{
                sh 'echo deploying....'
                sh 'echo deployment done'
            }
        }

        stage('Integration Test'){
            steps{
                script{
                    testResult = build job: job_test, parameters: [string(name: 'BRANCH_TEST', value: 'master')]

                    println "Build testing ID : " + testResult.getNumber()
                    println "Build Testing Status: " + testResult.getResult()

                }
            }
        }
    }

    post{
        always{
            sh 'echo this section is always executed'
        }

        success{
            sh 'echo this section is only executed when pipeline is success'
        }

        failure{
            sh 'echo this section is only executed when pipeline is failed'
        }
    }
}